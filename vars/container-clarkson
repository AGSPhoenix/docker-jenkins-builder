---

# project information
project_name: clarkson
project_url: "https://github.com/linuxserver/Clarkson"
project_logo: "https://raw.githubusercontent.com/linuxserver/Clarkson/master/docs/dashboard.png"
project_blurb: "[{{ project_name|capitalize }}]({{ project_url }}) is a web-based dashboard application that gives you a neat and clean interface for logging your fuel fill-ups for all of your vehicles. The application has full multi-user support, as well as multiple vehicles per user. Whenever you fill-up your car or motorcycle, keep the receipt and record the data in Clarkson."
project_lsio_github_repo_url: "https://github.com/linuxserver/docker-{{ project_name }}"

# container parameters
common_param_env_vars_enabled: true #PGID, PUID, etc
param_container_name: "{{ project_name }}"
param_usage_include_net: false
param_net: "host"
param_net_desc: "Shares host networking with container."
param_usage_include_env: true
param_env_vars:
  - { env_var: "MYSQL_HOST", env_value: "db-host", desc: "Points the backend to the MySQL database. This can be either a docker hostname or an IP" }
  - { env_var: "MYSQL_USERNAME", env_value: "db-user", desc: "The user with access to the _clarkson_ schema" }
  - { env_var: "MYSQL_PASSWORD", env_value: "db-pass", desc: "The password for the DB user" }
  - { env_var: "ENABLE_REGISTRATIONS", env_value: "_true_", desc: "If set to _true_, allows new users to register" }
param_usage_include_vols: false
param_volumes:
  - { vol_path: "/config", vol_host_path: "</path/to/appdata/config>", desc: "Configuration files." }
param_usage_include_ports: true
param_ports:
  - { external_port: "3000", internal_port: "3000", port_desc: "Application WebUI" } 

# application setup block
app_setup_block_enabled: true
app_setup_block: |
  {% raw %}**Please ensure MySQL is running before starting this container**.
  <br/><br/>
  It is preferred if you create the `clarkson` schema before initially running the container, then creating a user with granted permissions for the schema. Creating the schema before running the app is important as the `clarkson` user will not have permission to create the schema on your behalf. You can, of course, use the `root` user, which has the ability to create schemas automatically, but this is not recommended.
  <br/>
  ```sql
  CREATE SCHEMA `clarkson`;"
  CREATE USER 'clarkson_user' IDENTIFIED BY 'supersecretpassword';
  GRANT ALL ON `clarkson`.* TO 'clarkson_user';
  ```
  <br/>
  Once running, the container will run an initial MySQL migration, which populates the schema with all tables and procedures. The application will start immediately afterwards. You will need to register an initial user, of which will be the admin of the application. All subsequent users will be standard users. You can disable registrations after the fact by recreating the container with the `ENABLE_REGISTRATIONS` flag set to `false`. This will not hide the register link, but will disable the functionality.{% endraw %}

app_setup_nginx_reverse_proxy_snippet: false
app_setup_nginx_reverse_proxy_block: ""

# changelog
changelogs:
  - { date: "19.02.18", desc: "Initial release." }