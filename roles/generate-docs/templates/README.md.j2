<a href="{{ lsio_full_url }}" rel="{{ lsio_project_name }}">![{{ lsio_project_name }}]({{ lsio_primary_logo_url }})</a>

The [LinuxServer.io]({{ lsio_full_url }}) team brings you another container release featuring :-

 * regular and timely application updates
 * easy user mappings (PGID, PUID)
 * custom base image with s6 overlay
 * weekly base OS updates with common layers across the entire LinuxServer.io ecosystem to minimise space usage, down time and bandwidth
 * regular security updates

Find us at:
* [Discord]({{ lsio_discord_url }}) - {{ lsio_discord_desc }}
* [IRC]({{ lsio_irc_url }}) - {{ lsio_irc_desc }}
* [Blog]({{ lsio_blog_url }}) - {{ lsio_blog_desc }}
* [Podcast]({{ lsio_podcast_url }}) - {{ lsio_podcast_desc }}

# {{ lsio_project_name_short }}/{{ project_name }}
[![]({{ lsio_microbadger_badge_version_url }}/{{ project_name }}.svg)]({{ lsio_microbadger_image_url }}{{ project_name }} "{{ lsio_microbadger_link_desc }}")
[![]({{ lsio_microbadger_badge_image_url }}/{{ project_name }}.svg)]({{ lsio_microbadger_image_url }}/{{ project_name }} "{{ lsio_microbadger_link_desc }}")
![Docker Pulls]({{ lsio_shieldsio_pull_count_url }}/{{ project_name }}.svg)
![Docker Stars]({{ lsio_shieldsio_stars_count_url }}/{{ project_name }}.svg)

{{ project_blurb }}

<a href="{{ project_url }}" rel="{{ project_name }}">![{{ project_name }}]({{ project_logo }})</a>

## Usage

Here are some example snippets to help you get started creating a container.

### docker

```
docker create \
  --name={{ param_container_name }} \
{% if param_usage_include_net %}
  --net={{ param_net }} \
{% endif %}
{% if common_param_env_vars_enabled %}
{% for item in common_param_env_vars %}
  -e {{ item.env_var }}={{ item.env_value }} \
{% endfor %}
{% endif %}
{% if param_usage_include_env %}
{% for item in param_env_vars %}
  -e {{ item.env_var }}={{ item.env_value }} \
{% endfor %}
{% endif %}
{% if param_usage_include_ports %}
{% for item in param_ports %}
  -p {{ item.external_port }}:{{ item.internal_port }} \
{% endfor %}
{% endif %}
{% if param_usage_include_vols %}
{% for item in param_volumes %}
  -v {{ item.vol_host_path }}:{{ item.vol_path }} \
{% endfor %}
{% endif %}
  {{ lsio_project_name_short }}/{{ project_name }}
```

{% if optional_block_1 %}
{% for item in optional_block_1_items %}
{{ item }}
{% endfor %}

{% for item in param_ports %}
-p {{ item.external_port }}:{{ item.internal_port }} \
{% endfor %}
{% endif %}

### docker-compose

Compatible with docker-compose v2 schemas.

```
---
version: "2"
services:
  {{ project_name }}:
    image: {{ lsio_project_name_short }}/{{ project_name }}
    container_name: {{ project_name }}
{% if param_usage_include_net %}
    network_mode: {{ param_net }}
{% endif %}
{% if common_param_env_vars_enabled %}
    environment:
{% for item in common_param_env_vars %}
      - {{ item.env_var }}={{ item.env_value }}
{% endfor %}
{% endif %}
{% if param_usage_include_env %}
{% for item in param_env_vars %}
      - {{ item.env_var }}={{ item.env_value }}
{% endfor %}
{% endif %}
{% if param_usage_include_vols %}
    volumes:
{% for item in param_volumes %}
      - {{ item.vol_host_path }}:{{ item.vol_path }}
{% endfor %}
{% endif %}
{% if param_usage_include_ports %}
    ports:
{% for item in param_ports %}
      - {{ item.external_port }}:{{ item.internal_port }}
{% endfor %}
{% endif %}
    mem_limit: 4096m
    restart: unless-stopped
```

## Parameters

Parameters are split into two halves with the left hand side representing the host and the right the container side. The colon acts as a separator between them.
For example with a port `-p external:internal` - what this shows is the port mapping from the inside to the outside of the container.
For example, `-p 8080:80` would expose port `80` from inside the container to be accessible from the host's IP on port `8080`
http://192.168.x.x:8080 would show you what's running inside the container on port 80.


| Parameter | Function |
| :----: | --- |
{% if param_usage_include_net %}
| `--net={{ param_net }}` | {{ param_net_desc }} |
{% endif %}
{% if param_usage_include_ports %}
{% for item in param_ports %}
| `-p {{ item.internal_port }}` | {{ item.port_desc }} |
{% endfor %}
{% endif %}
{% if common_param_env_vars_enabled %}
{% for item in common_param_env_vars %}
| `-e {{ item.env_var }}={{ item.env_value }}` | {{ item.desc }} |
{% endfor %}
{% endif %}
{% if param_usage_include_env %}
{% for item in param_env_vars %}
| `-e {{ item.env_var }}={{ item.env_value }}` | {{ item.desc }} |
{% endfor %}
{% endif %}
{% if param_usage_include_vols %}
{% for item in param_volumes %}
| `-v {{ item.vol_path }}` | {{ item.desc }} |
{% endfor %}
{% endif %}


&nbsp;

## User / Group Identifiers

When using volumes (`-v` flags) permissions issues can arise between the host OS and the container, we avoid this issue by allowing you to specify the user `PUID` and group `PGID`.

Ensure any volume directories on the host are owned by the same user you specify and it will "just work" &trade;.

In this instance `PUID=1001` and `PGID=1001`, to find yours use `id user` as below:

```
  $ id <dockeruser>
    uid=1001(dockeruser) gid=1001(dockergroup) groups=1001(dockergroup)
```

&nbsp;

## Versions

{% for item in changelogs %}
* **{{ item.date }}** - {{ item.desc }}
{% endfor %}